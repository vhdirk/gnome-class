-*- org -*-

* Reordering class fields is an ABI break.  Should we warn about this / how?

* Notes on syn

** Error messages

I couldn't find a way to create a meaningful ParseError.  The exported
parse_error() doesn't let one provide a string or anything.

* Antoyo on proc-macro2:

<antoyo> I didn't know about parse_error(), but you might get better
errors by using std::compile_error
(https://doc.rust-lang.org/stable/std/macro.compile_error.html). Let
me know if you have issues to set the right Span on this, since it's
tricky.

fn error(msg: &str, span: proc_macro2::Span) -> Tokens {
    let result = quote! {
        compile_error!(#msg)
    };
    let mut expr: Expr = parse(result.clone().into()).unwrap();
    if let Mac(ref mut mac) = expr.node {
        mac.tokens[0].0.span = span;
    }
    quote! {
        #expr
    }
}

<antoyo> Instead of returning the generated code, you return that.

** Good error messages from relm

https://github.com/antoyo/relm/commit/a1273fee008c5d23e563013b5bc06b248d7d3ab6#diff-3d41c897cfaf02d790dfc4d9403e07b2R458
Grep for error_expecting_braces! and error_after_child_gtk_items! there

* Inspiration:

** Rustc's structure: https://github.com/rust-lang/rust/blob/master/src/librustc/README.md
